all: core | extract_info

include ../xmconfig
include $(XTRATUM_PATH)/config.mk
include $(XTRATUM_PATH)/core/rules.mk

ifdef CONFIG_MMU
	MM=mmu
else
	MM=mmuless
endif

xm.lds: kernel/$(ARCH)/xm.lds.in include/config.h
	@$(TARGET_CC) $(TARGET_ASFLAGS) -x assembler-with-cpp -E -P -I$(XM_CORE_PATH)/include kernel/$(ARCH)/xm.lds.in -o kernel/$(ARCH)/xm.lds

XMCORE_SUBDIRS=\
	kernel/$(ARCH)\
	kernel/$(MM)\
	kernel\
	klibc klibc/$(ARCH)\
	objects devices\

KOBJS=\
	kernel/$(ARCH)/karch.o\
	kernel/$(MM)/kmm.o\
	kernel/kern.o\
	klibc/libc.o\
	klibc/$(ARCH)/arch_libc.o\
	objects/objects.o devices/devices.o\

links:
	@exec echo -e "\n> Target architecture: [$(ARCH)] ";
	@if [ ! -d $(XTRATUM_PATH)/core/include/arch ] ; then \
		ln -sf $(XTRATUM_PATH)/core/include/$(ARCH) $(XTRATUM_PATH)/core/include/arch; \
	fi

Kconfig.ver:
	@exec echo "# $@: autogenerated file, don't edit"		>  $@

	@exec echo "config ARCH"					>> $@
	@exec echo "	string"						>> $@
	@exec echo "	default \"$(ARCH)\""				>> $@

	@exec echo "config KERNELVERSION"				>> $@
	@exec echo "	string"						>> $@
	@exec echo "	default \"$$XTRATUMVERSION\""	>> $@

KCONFIG=kernel/$(ARCH)/Kconfig

config: links Kconfig.ver
	@$(XTRATUM_PATH)/scripts/kconfig/conf $(KCONFIG)

oldconfig: links Kconfig.ver
	@$(XTRATUM_PATH)/scripts/kconfig/conf -o $(KCONFIG)

silentoldconfig: links Kconfig.ver
	@mkdir -p $(XTRATUM_PATH)/core/include/config
	@$(XTRATUM_PATH)/scripts/kconfig/conf -s $(KCONFIG)

menuconfig: links Kconfig.ver
	@$(XTRATUM_PATH)/scripts/kconfig/mconf $(KCONFIG)

defconfig: links Kconfig.ver
	@$(XTRATUM_PATH)/scripts/kconfig/conf -d $(KCONFIG)

#$(XTRATUM_PATH)/core/include/autoconf.h: $(XTRATUM_PATH)/core/.config silentoldconfig

core: $(XTRATUM_PATH)/core/include/autoconf.h xm.lds generate_offsets links
	@exec echo -e "\n> Building XM Core";
	for dir in $(XMCORE_SUBDIRS) ; do \
		echo "  - $$dir"	; \
		$(MAKE)  -C $$dir all  ; \
		if [ "$$?" -ne 0 ]; then exit 1 ; fi \
	done
	@$(TARGET_LD) $(TARGET_LDFLAGS) -nostdlib -Tkernel/$(ARCH)/xm.lds -o xm_core.1 $(KOBJS) $(LIBGCC)
	@$(TARGET_OBJCOPY) -O binary -j .data xm_core.1 data.bin
	@touch tmp.S
	@$(TARGET_CC) $(TARGET_CFLAGS_ARCH) -c tmp.S
	@$(TARGET_OBJCOPY) --add-section=.cdata=data.bin --set-section-flags=.cdata=load,alloc tmp.o
	@exec echo -e "> Linking XM Core";
	@$(TARGET_LD) $(TARGET_LDFLAGS) -nostdlib -Tkernel/$(ARCH)/xm.lds -o xm_core $(KOBJS) tmp.o $(LIBGCC)
	@$(RM) -f xm_core.1 data.bin tmp.o tmp.S
	@size xm_core;
	@$(TARGET_OBJCOPY) -S -O binary xm_core xm_core.bin
	@chmod -x xm_core xm_core.bin
	@exec echo "> Done";

generate_offsets:
	@$(TARGET_CC) $(TARGET_CFLAGS) -S -o offsets.S $(XTRATUM_PATH)/scripts/asm-offsets.c -D_GENERATE_OFFSETS_ -D_OFFS_FILE_=\"$(ARCH)/gen_offsets.h\"
	@$(SHELL) $(XTRATUM_PATH)/scripts/asm-offsets.sh offsets.h < offsets.S > $(XM_CORE_PATH)/include/$(ARCH)/asm_offsets.h
	@$(RM) -f offsets.S

extract_info:
	@$(HOST_CC) -Wall -O2 -o $(XTRATUM_PATH)/scripts/extractinfo $(XTRATUM_PATH)/scripts/extractinfo.c -DTARGET_OBJCOPY=\"$(TARGET_OBJCOPY)\" --include $(XTRATUM_PATH)/core/include/autoconf.h
	@$(XTRATUM_PATH)/scripts/extractinfo $(XTRATUM_PATH)/core/xm_core 2> $(XM_CORE_PATH)/include/$(ARCH)/ginfo.h


clean:
	@exec echo -e "> Cleaning XM Core";
	@exec echo -e "  - Removing *.o *.a *~ files";
	@find -name "*~" -exec rm '{}' \;
	@find -name "*.o" -exec rm '{}' \;
	@find -name "*.a" -exec rm '{}' \;
	@$(RM) -f kernel/$(ARCH)/xm.lds include/$(ARCH)/asm_offsets.h include/$(ARCH)/ginfo.h
	@exec echo -e "> Done";
